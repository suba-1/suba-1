#include <stdio.h>
#include <stdlib.h>
struct node{
   int info;
   struct node *ptr;
}
   *front,*rear,*temp,*front1;
int frontelement();
void enq(int data);
void deq();
void display();
int count = 0;
void main(){
   int no, ch, e;
   printf("\n1.Enqueue");
   printf("\n2.Dequeue");
   printf("\n3.peek");
   printf("\n4.Display");
   printf("\n5.Exit");
   while (1){
      printf("\n Enter choice : ");
      scanf("%d", &ch);
      switch (ch){
         case 1:
            printf("Enter the element: ");
         scanf("%d", &no);
         enq(no);
         break;
         case 2:
            deq();
         break;
         case 3:
           e = frontelement();
         if (e != 0)
            printf("Top element is: %d\n", e);
         else
            printf("\n No front element in Queue");
         break;
         case 4:
            display();
         break;
         case 5:
         printf("Thank you\n");
            exit(0);
         default:
         printf("Wrong choice!Please enter correct choice\n");
         break;
      }
   }
}
void enq(int data){
   if (rear == NULL){
      rear = (struct node *)malloc(1*sizeof(struct node));
      rear->ptr = NULL;
      rear->info = data;
      front = rear;
   }else{
      temp=(struct node *)malloc(1*sizeof(struct node));
      rear->ptr = temp;
      temp->info = data;
      temp->ptr = NULL;
      rear = temp;
   }
   count++;
}
   void deq(){
      front1 = front;
      if (front1 == NULL){
         printf("\n Queue underflow");
         return;
      }
      else
      if (front1->ptr != NULL){
         front1 = front1->ptr;
         printf("\n Dequeued element is: %d", front->info);
         free(front);
         front = front1;
      }else{
         printf("\n Dequeued element is: %d", front->info);
         free(front);
         front = NULL;
      rear = NULL;
   }
   count--;
}
int frontelement(){
   if ((front != NULL) && (rear != NULL))
      return(front->info);
   else
      return 0;
}
void display(){
   front1 = front;
   if ((front1 == NULL) && (rear == NULL)){
      printf("Queue is empty");
      return;
   }
   while (front1 != rear)
   {
      printf("Elements in queue are:");
      printf("%d", front1->info);
      front1 = front1->ptr;
   }
   if (front1 == rear)
      printf("%d", front1->info);
   }
